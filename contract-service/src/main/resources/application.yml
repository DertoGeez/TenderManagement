server:
  port: 8083
  servlet:
    context-path: /contract-service

spring:
  application:
    name: contract-service
  datasource:
    url: jdbc:mysql://localhost:3306/contract_service_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
  cloud:
    config:
      enabled: true
      uri: ${CONFIG_SERVER_URL:http://localhost:8888}
    discovery:
      enabled: true
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  sleuth:
    sampler:
      probability: 1.0

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
  instance:
    preferIpAddress: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.egov.tendering: INFO
    org.springframework: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

app:
  kafka:
    topics:
      contract-events: contract-events