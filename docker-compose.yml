#version: '2'
#
#services:
#  config-server:
#    image: tms/config-server
#    container_name: config-server
#    mem_limit: 512M
#    ports:
#      - "8888:8888"
#
#  discovery-server:
#    image: tms/discovery-server
#    container_name: discovery-server
#    mem_limit: 512M
#    depends_on:
#      - config-server
#    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
#    ports:
#      - "8761:8761"
#
#  controller-service:
#    image: tms/controller-service
#    container_name: controller-service
#    mem_limit: 512M
#    depends_on:
#      - config-server
#      - discovery-server
#    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
#    ports:
#      - "8081:8081"
#
#  service-service:
#    image: tms/service-service
#    container_name: service-service
#    mem_limit: 512M
#    depends_on:
#      - config-server
#      - discovery-server
#    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
#    ports:
#      - "8082:8082"
#
#  committee-service:
#    image: tms/committee-service
#    container_name: committee-service
#    mem_limit: 512M
#    depends_on:
#      - config-server
#      - discovery-server
#    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
#    ports:
#      - "8083:8083"
#
#  evaluator-service:
#    image: tms/evaluator-service
#    container_name: committee-service
#    mem_limit: 512M
#    depends_on:
#      - config-server
#      - discovery-server
#    entrypoint: [ "./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher" ]
#    ports:
#      - "8084:8084"
#
#  api-gateway:
#    image: tms/api-gateway-service
#    container_name: api-gateway
#    mem_limit: 512M
#    depends_on:
#      - config-server
#      - discovery-server
#    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
#    ports:
#      - "8080:8080"
#
##  tracing-server:
##    image: openzipkin/zipkin
##    container_name: tracing-server
##    mem_limit: 512M
##    environment:
##      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
##    ports:
##      - 9411:9411
#
#  notification-server:
#    image: tms/notification-service
#    container_name: notification-service
#    mem_limit: 512M
#    depends_on:
#      - config-server
#      - discovery-server
#    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
#    ports:
#      - "8085:8085"
#
#  ## Grafana / Prometheus
#
#  grafana-server:
#    build: ./docker/grafana
#    container_name: grafana-server
#    mem_limit: 256M
#    ports:
#      - "3000:3000"
#
#  prometheus-server:
#    build: ./docker/prometheus
#    container_name: prometheus-server
#    mem_limit: 256M
#    ports:
#      - "9091:9090"


version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: admin
#      PGDATA: /data/postgres
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
#      PGADMIN_DEFAULT_PASSWORD: admin
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: